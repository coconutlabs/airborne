{"version":3,"sources":["app/apis/coordinates.js","app/apis/flight_data.js","app/initialize.js","app/objects/flight.js","app/objects/flight_marker.js","app/objects/map.js"],"names":["superagent","require","jsonp","getFromIp","callback","get","use","end","error","response","body","latitude","longitude","lat","long","module","exports","openSkyApiUrl","getAll","document","addEventListener","moment","leaflet","FlightData","AirborneMap","AirborneFlight","AirborneFlightMarker","appMap","plottedFlights","FeatureGroup","plotFlights","newFlightLayer","dataTimestamp","unix","time","format","console","log","states","length","plotCount","i","flight","isPlottable","onGround","marker","addLayer","removeLayer","setTimeout","stateVector","icao24","callsign","origin_country","time_position","time_velocity","altitude","on_ground","velocity","heading","vertical_rate","sensors","trim","originCountry","timePosition","timeVelocity","verticalRate","airplaneIcon","altitudeFt","altitudeLevel","icon","iconUrl","iconSize","iconAnchor","popupAnchor","tooltipHtml","unit","flightIdentifier","speed","Math","round","kph","mph","altitudeM","title","rotationAngle","rotationOrigin","bindTooltip","Marker","coordinates","cartoLightServer","url","attribution","tileLayerForServer","tileServer","TileLayer","minZoom","maxZoom","domElement","invalidateSize","location","LatLng","setView","Map"],"mappings":"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","file":"public/js/app.js","sourcesContent":["const superagent = require('superagent')\nconst jsonp = require('superagent-jsonp')\n\nconst getFromIp = (callback) => {\n  superagent.get('//freegeoip.net/json')\n  .use(jsonp)\n  .end((error, response) => {\n    if (!response) { return callback({ error }) }\n\n    const { body: { latitude, longitude } } = response\n\n    callback({ lat: latitude, long: longitude })\n  })\n}\n\nmodule.exports = {\n  getFromIp\n}\n","const superagent = require('superagent')\n\nconst openSkyApiUrl = 'https://cors-anywhere.herokuapp.com/opensky-network.org/api'\n\nconst getAll = (callback) =>\n  superagent.get(`${openSkyApiUrl}/states/all`)\n  .end((error, response) => {\n    callback(response.body)\n  })\n\nmodule.exports = {\n  getAll\n}\n","document.addEventListener('DOMContentLoaded', () => {\n\tconst moment = require('moment')\n\tconst leaflet = require('leaflet')\n\n\tconst FlightData = require('./apis/flight_data')\n\n\tconst AirborneMap = require('./objects/map')\n\tconst AirborneFlight = require('./objects/flight')\n\tconst AirborneFlightMarker = require('./objects/flight_marker')\n\n\tconst appMap = new AirborneMap('app-map')\n\tlet plottedFlights = new leaflet.FeatureGroup()\n\n\tconst plotFlights = () => {\n\t\tconst newFlightLayer = new leaflet.FeatureGroup()\n\n\t\tFlightData.getAll((response) => {\n\t\t\tconst dataTimestamp = moment.unix(response.time).format('MMMM Do YYYY, h:mm:ss a')\n\t\t\tconsole.log(`${response.states.length} flights updated ${dataTimestamp}`)\n\n\t\t\tlet plotCount = 0\n\n\t\t\tfor (let i = 0; i < response.states.length; i++) {\n\t\t\t\tlet flight = new AirborneFlight(response.states[i])\n\t\t\t\tif (!flight.isPlottable || flight.onGround) { continue; }\n\n\t\t\t\tlet marker = new AirborneFlightMarker(flight)\n\n\t\t\t\tnewFlightLayer.addLayer(marker)\n\n\t\t\t\tplotCount++\n\t\t\t}\n\n\t\t\tappMap.removeLayer(plottedFlights)\n\t\t\tappMap.addLayer(newFlightLayer)\n\t\t\tplottedFlights = newFlightLayer\n\n\t\t\tconsole.log(`Plotted ${plotCount} flights`);\n\n\t\t\tsetTimeout(plotFlights, 10000)\n\t\t})\n\t}\n\n\tplotFlights()\n});\n","module.exports = class Flight {\n  constructor(stateVector) {\n    // See https://opensky-network.org/apidoc/rest.html#response\n    const [\n      icao24,\n      callsign,\n      origin_country,\n      time_position,\n      time_velocity,\n      longitude,\n      latitude,\n      altitude,\n      on_ground,\n      velocity,\n      heading,\n      vertical_rate,\n      sensors\n    ] = stateVector\n\n    this.icao24 = icao24 // string\n    this.callsign = (callsign ? callsign.trim() : null) // string\n    this.originCountry = origin_country // string\n    this.timePosition = time_position // unix timestamp (seconds)\n    this.timeVelocity = time_velocity // unix timestamp (seconds)\n    this.longitude = longitude // float\n    this.latitude = latitude // float\n    this.altitude = altitude // int (meters)\n    this.onGround = on_ground // boolean\n    this.velocity = velocity // (meters/second)\n    this.heading = heading // float\n    this.verticalRate = vertical_rate // (meters/second)\n    this.sensors = sensors // array of ids\n  }\n\n  get altitudeFt() { return this.altitude * 3.28084 }\n  get altitudeM() { return this.altitude }\n\n  get mph() { return this.velocity * 2.23694 }\n  get kph() { return this.velocity * 3.6 }\n\n  get verticalFps() { return this.verticalRate * 3.28084 }\n  get verticalMps() { return this.verticalRate }\n\n  get isPlottable() { return this.longitude && this.latitude }\n}\n","const leaflet = require('leaflet')\nrequire('leaflet-rotatedmarker')\n\nconst airplaneIcon = (flight) => {\n  const altitude = flight.altitudeFt\n  let altitudeLevel\n\n  switch (true) {\n    case altitude >= 35000:\n      altitudeLevel = 'high'\n      break;\n    case altitude >= 20000:\n      altitudeLevel = 'medium'\n      break;\n    case altitude < 20000:\n      altitudeLevel = 'low'\n      break;\n    default:\n      altitudeLevel = 'default'\n  }\n\n  return leaflet.icon({\n    iconUrl: `./img/airplane-${altitudeLevel}.svg`,\n    iconSize: [20, 20],\n    iconAnchor: [10, 10],\n    popupAnchor: [0, -5]\n  })\n}\n\nconst tooltipHtml = (flight, unit) => {\n  let flightIdentifier, speed, altitude\n\n  flightIdentifier =\n    flight.callsign ?\n    `Flight ${flight.callsign}` :\n    'Unidentified Flight'\n  speed =\n    unit == 'metric' ?\n    `${Math.round(flight.kph)} kph` :\n    `${Math.round(flight.mph)} mph`\n  altitude =\n    unit == 'metric' ?\n    `${Math.round(flight.altitudeM)} m` :\n    `${Math.round(flight.altitudeFt)} ft`\n\n  return `<strong>${flightIdentifier}</strong><br />` +\n  `Speed: <strong>${speed}</strong><br />` +\n  `Altitude: <strong>${altitude}</strong>`\n}\n\nmodule.exports = class AirborneFlightMarker extends leaflet.Marker {\n  constructor(flight) {\n    super([ flight.latitude, flight.longitude ], {\n      icon: airplaneIcon(flight),\n      title: flight.callsign,\n      rotationAngle: Math.round(flight.heading),\n      rotationOrigin: 'center center'\n    })\n    .bindTooltip(tooltipHtml(flight))\n\n    this.flight = flight\n  }\n}\n","const leaflet = require('leaflet')\nconst coordinates = require('../apis/coordinates')\n\nconst cartoLightServer = {\n  url: '//cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}@2x.png',\n  attribution:\n    '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, ' +\n    '&copy; <a href=\"https://carto.com/attribution\">CARTO</a>'\n}\n\nconst tileLayerForServer = (tileServer) => {\n  const { url, attribution } = tileServer\n\n  return new leaflet.TileLayer(url, { minZoom: 4, maxZoom: 12, attribution })\n}\n\nmodule.exports = class AirborneMap extends leaflet.Map {\n  constructor(domElement) {\n    super(domElement)\n\n    this.addLayer(tileLayerForServer(cartoLightServer))\n    setTimeout(() => { this.invalidateSize() }, 0)\n\n    coordinates.getFromIp((coordinates) => {\n      const { lat, long } = coordinates\n      let location\n\n      if (!lat || !long) {\n        location = new leaflet.LatLng(39.8333333, -98.585522) // US Center\n      } else {\n        location = new leaflet.LatLng(lat, long)\n      }\n\n      this.setView(location, 6)\n    })\n  }\n}\n"]}