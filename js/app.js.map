{"version":3,"sources":["app/apis/coordinates.js","app/apis/flight_data.js","app/initialize.js","app/objects/flight.js","app/objects/flight_marker.js","app/objects/map.js"],"names":["superagent","require","jsonp","getFromIp","callback","get","use","end","error","response","body","latitude","longitude","lat","long","module","exports","openSkyApiUrl","getAll","document","addEventListener","moment","leaflet","FlightData","AirborneMap","AirborneFlight","AirborneFlightMarker","appMap","allFlights","console","log","states","length","unix","time","format","i","flight","isPlottable","marker","addTo","push","stateVector","icao24","callsign","origin_country","time_position","time_velocity","altitude","on_ground","velocity","heading","vertical_rate","sensors","originCountry","timePosition","timeVelocity","onGround","verticalRate","airplaneIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","title","Marker","coordinates","cartoLightServer","url","attribution","tileLayerForServer","tileServer","TileLayer","minZoom","maxZoom","domElement","addLayer","setTimeout","invalidateSize","location","LatLng","setView","Map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,aAAaC,QAAQ,YAAR,CAAnB;AACA,IAAMC,QAAQD,QAAQ,kBAAR,CAAd;;AAEA,IAAME,YAAY,SAAZA,SAAY,CAACC,QAAD,EAAc;AAC9BJ,aAAWK,GAAX,CAAe,sBAAf,EACCC,GADD,CACKJ,KADL,EAECK,GAFD,CAEK,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxB,QAAI,CAACA,QAAL,EAAe;AAAE,aAAOL,SAAS,EAAEI,YAAF,EAAT,CAAP;AAA4B;;AADrB,yBAGkBC,QAHlB,CAGhBC,IAHgB;AAAA,QAGRC,QAHQ,kBAGRA,QAHQ;AAAA,QAGEC,SAHF,kBAGEA,SAHF;;;AAKxBR,aAAS,EAAES,KAAKF,QAAP,EAAiBG,MAAMF,SAAvB,EAAT;AACD,GARD;AASD,CAVD;;AAYAG,OAAOC,OAAP,GAAiB;AACfb;AADe,CAAjB;;;;;;ACfA,IAAMH,aAAaC,QAAQ,YAAR,CAAnB;;AAEA,IAAMgB,gBAAgB,6DAAtB;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACd,QAAD;AAAA,SACbJ,WAAWK,GAAX,CAAkBY,aAAlB,kBACCV,GADD,CACK,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBL,aAASK,SAASC,IAAlB;AACD,GAHD,CADa;AAAA,CAAf;;AAMAK,OAAOC,OAAP,GAAiB;AACfE;AADe,CAAjB;;;;;;ACVAC,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AACnD,KAAMC,SAASpB,QAAQ,QAAR,CAAf;AACA,KAAMqB,UAAUrB,QAAQ,SAAR,CAAhB;;AAEA,KAAMsB,aAAatB,QAAQ,oBAAR,CAAnB;;AAEA,KAAMuB,cAAcvB,QAAQ,eAAR,CAApB;AACA,KAAMwB,iBAAiBxB,QAAQ,kBAAR,CAAvB;AACA,KAAMyB,uBAAuBzB,QAAQ,yBAAR,CAA7B;;AAEA,KAAM0B,SAAS,IAAIH,WAAJ,CAAgB,SAAhB,CAAf;;AAEA,KAAII,aAAa,EAAjB;;AAEAL,YAAWL,MAAX,CAAkB,UAACT,QAAD,EAAc;AAC/BoB,UAAQC,GAAR,CAAerB,SAASsB,MAAT,CAAgBC,MAA/B,yBAAyDX,OAAOY,IAAP,CAAYxB,SAASyB,IAArB,EAA2BC,MAA3B,CAAkC,+BAAlC,CAAzD;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI3B,SAASsB,MAAT,CAAgBC,MAApC,EAA4CI,GAA5C,EAAiD;AAChD,OAAIC,SAAS,IAAIZ,cAAJ,CAAmBhB,SAASsB,MAAT,CAAgBK,CAAhB,CAAnB,CAAb;AACA,OAAI,CAACC,OAAOC,WAAZ,EAAyB;AAAE;AAAW;;AAEtC,OAAIC,SAAS,IAAIb,oBAAJ,CAAyBW,MAAzB,CAAb;AACAE,UAAOC,KAAP,CAAab,MAAb;;AAEAC,cAAWa,IAAX,CAAgBJ,MAAhB;AACA;;AAEDR,UAAQC,GAAR,cAAuBF,WAAWI,MAAlC;AACA,EAdD;AAeA,CA7BD;;;;;;;;;;;;ACAAjB,OAAOC,OAAP;AACE,kBAAY0B,WAAZ,EAAyB;AAAA;;AACvB;AADuB,sCAgBnBA,WAhBmB;AAAA,QAGrBC,MAHqB;AAAA,QAIrBC,QAJqB;AAAA,QAKrBC,cALqB;AAAA,QAMrBC,aANqB;AAAA,QAOrBC,aAPqB;AAAA,QAQrBnC,SARqB;AAAA,QASrBD,QATqB;AAAA,QAUrBqC,QAVqB;AAAA,QAWrBC,SAXqB;AAAA,QAYrBC,QAZqB;AAAA,QAarBC,OAbqB;AAAA,QAcrBC,aAdqB;AAAA,QAerBC,OAfqB;;AAkBvB,SAAKV,MAAL,GAAcA,MAAd,CAlBuB,CAkBF;AACrB,SAAKC,QAAL,GAAgBA,QAAhB,CAnBuB,CAmBE;AACzB,SAAKU,aAAL,GAAqBT,cAArB,CApBuB,CAoBa;AACpC,SAAKU,YAAL,GAAoBT,aAApB,CArBuB,CAqBW;AAClC,SAAKU,YAAL,GAAoBT,aAApB,CAtBuB,CAsBW;AAClC,SAAKnC,SAAL,GAAiBA,SAAjB,CAvBuB,CAuBI;AAC3B,SAAKD,QAAL,GAAgBA,QAAhB,CAxBuB,CAwBE;AACzB,SAAKqC,QAAL,GAAgBA,QAAhB,CAzBuB,CAyBE;AACzB,SAAKS,QAAL,GAAgBR,SAAhB,CA1BuB,CA0BG;AAC1B,SAAKC,QAAL,GAAgBA,QAAhB,CA3BuB,CA2BE;AACzB,SAAKC,OAAL,GAAeA,OAAf,CA5BuB,CA4BA;AACvB,SAAKO,YAAL,GAAoBN,aAApB,CA7BuB,CA6BW;AAClC,SAAKC,OAAL,GAAeA,OAAf,CA9BuB,CA8BA;AACxB;;AAhCH;AAAA;AAAA,wBAkCY;AAAE,aAAO,KAAKH,QAAL,GAAgB,OAAvB;AAAgC;AAlC9C;AAAA;AAAA,wBAmCY;AAAE,aAAO,KAAKA,QAAL,GAAgB,GAAvB;AAA4B;AAnC1C;AAAA;AAAA,wBAqCoB;AAAE,aAAO,KAAKQ,YAAL,GAAoB,OAA3B;AAAoC;AArC1D;AAAA;AAAA,wBAsCoB;AAAE,aAAO,KAAKA,YAAZ;AAA0B;AAtChD;AAAA;AAAA,wBAwCoB;AAAE,aAAO,KAAK9C,SAAL,IAAkB,KAAKD,QAA9B;AAAwC;AAxC9D;;AAAA;AAAA;;;;;;;;;;;;ACAA,IAAMW,UAAUrB,QAAQ,SAAR,CAAhB;;AAEA,IAAM0D,eAAerC,QAAQsC,IAAR,CAAa;AAC9BC,WAAS,mBADqB;AAE9BC,YAAU,CAAC,EAAD,EAAK,EAAL,CAFoB;AAG9BC,cAAY,CAAC,EAAD,EAAK,EAAL,CAHkB;AAI9BC,eAAa,CAAC,CAAD,EAAI,CAAC,CAAL;AAJiB,CAAb,CAArB;;AAOAjD,OAAOC,OAAP;AAAA;;AACE,gCAAYqB,MAAZ,EAAoB;AAAA;;AAAA,4IACZ,CAAEA,OAAO1B,QAAT,EAAmB0B,OAAOzB,SAA1B,CADY,EAC2B;AAC3CgD,YAAMD,YADqC;AAE3CM,aAAO5B,OAAOO;AAF6B,KAD3B;;AAKlB,UAAKP,MAAL,GAAcA,MAAd;AALkB;AAMnB;;AAPH;AAAA,EAAoDf,QAAQ4C,MAA5D;;;;;;;;;;;;ACTA,IAAM5C,UAAUrB,QAAQ,SAAR,CAAhB;AACA,IAAMkE,cAAclE,QAAQ,qBAAR,CAApB;;AAEA,IAAMmE,mBAAmB;AACvBC,OAAK,2EADkB;AAEvBC,eACE,gFACA;AAJqB,CAAzB;;AAOA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,UAAD,EAAgB;AAAA,MACjCH,GADiC,GACZG,UADY,CACjCH,GADiC;AAAA,MAC5BC,WAD4B,GACZE,UADY,CAC5BF,WAD4B;;;AAGzC,SAAO,IAAIhD,QAAQmD,SAAZ,CAAsBJ,GAAtB,EAA2B,EAAEK,SAAS,CAAX,EAAcC,SAAS,EAAvB,EAA2BL,wBAA3B,EAA3B,CAAP;AACD,CAJD;;AAMAvD,OAAOC,OAAP;AAAA;;AACE,uBAAY4D,UAAZ,EAAwB;AAAA;;AAAA,0HAChBA,UADgB;;AAGtB,UAAKC,QAAL,CAAcN,mBAAmBH,gBAAnB,CAAd;AACAU,eAAW,YAAM;AAAE,YAAKC,cAAL;AAAuB,KAA1C,EAA4C,CAA5C;;AAEAZ,gBAAYhE,SAAZ,CAAsB,UAACgE,WAAD,EAAiB;AAAA,UAC7BtD,GAD6B,GACfsD,WADe,CAC7BtD,GAD6B;AAAA,UACxBC,IADwB,GACfqD,WADe,CACxBrD,IADwB;;AAErC,UAAIkE,iBAAJ;;AAEA,UAAI,CAACnE,GAAD,IAAQ,CAACC,IAAb,EAAmB;AACjBkE,mBAAW,IAAI1D,QAAQ2D,MAAZ,CAAmB,UAAnB,EAA+B,CAAC,SAAhC,CAAX,CADiB,CACqC;AACvD,OAFD,MAEO;AACLD,mBAAW,IAAI1D,QAAQ2D,MAAZ,CAAmBpE,GAAnB,EAAwBC,IAAxB,CAAX;AACD;;AAED,YAAKoE,OAAL,CAAaF,QAAb,EAAuB,CAAvB;AACD,KAXD;AANsB;AAkBvB;;AAnBH;AAAA,EAA2C1D,QAAQ6D,GAAnD","file":"public/js/app.js","sourcesContent":["const superagent = require('superagent')\nconst jsonp = require('superagent-jsonp')\n\nconst getFromIp = (callback) => {\n  superagent.get('//freegeoip.net/json')\n  .use(jsonp)\n  .end((error, response) => {\n    if (!response) { return callback({ error }) }\n\n    const { body: { latitude, longitude } } = response\n\n    callback({ lat: latitude, long: longitude })\n  })\n}\n\nmodule.exports = {\n  getFromIp\n}\n","const superagent = require('superagent')\n\nconst openSkyApiUrl = 'https://cors-anywhere.herokuapp.com/opensky-network.org/api'\n\nconst getAll = (callback) =>\n  superagent.get(`${openSkyApiUrl}/states/all`)\n  .end((error, response) => {\n    callback(response.body)\n  })\n\nmodule.exports = {\n  getAll\n}\n","document.addEventListener('DOMContentLoaded', () => {\n\tconst moment = require('moment')\n\tconst leaflet = require('leaflet')\n\n\tconst FlightData = require('./apis/flight_data')\n\n\tconst AirborneMap = require('./objects/map')\n\tconst AirborneFlight = require('./objects/flight')\n\tconst AirborneFlightMarker = require('./objects/flight_marker')\n\n\tconst appMap = new AirborneMap('app-map')\n\n\tlet allFlights = []\n\n\tFlightData.getAll((response) => {\n\t\tconsole.log(`${response.states.length} flights updated ${moment.unix(response.time).format('dddd, MMMM Do YYYY, h:mm:ss a')}`)\n\n\t\tfor (var i = 0; i < response.states.length; i++) {\n\t\t\tlet flight = new AirborneFlight(response.states[i])\n\t\t\tif (!flight.isPlottable) { continue; }\n\n\t\t\tlet marker = new AirborneFlightMarker(flight)\n\t\t\tmarker.addTo(appMap)\n\n\t\t\tallFlights.push(flight)\n\t\t}\n\n\t\tconsole.log(`Plotted ${allFlights.length} flights`);\n\t})\n});\n","module.exports = class Flight {\n  constructor(stateVector) {\n    // See https://opensky-network.org/apidoc/rest.html#response\n    const [\n      icao24,\n      callsign,\n      origin_country,\n      time_position,\n      time_velocity,\n      longitude,\n      latitude,\n      altitude,\n      on_ground,\n      velocity,\n      heading,\n      vertical_rate,\n      sensors\n    ] = stateVector\n\n    this.icao24 = icao24 // string\n    this.callsign = callsign // string\n    this.originCountry = origin_country // string\n    this.timePosition = time_position // unix timestamp (seconds)\n    this.timeVelocity = time_velocity // unix timestamp (seconds)\n    this.longitude = longitude // float\n    this.latitude = latitude // float\n    this.altitude = altitude // int (meters)\n    this.onGround = on_ground // boolean\n    this.velocity = velocity // (meters/second)\n    this.heading = heading // float\n    this.verticalRate = vertical_rate // (meters/second)\n    this.sensors = sensors // array of ids\n  }\n\n  get mph() { return this.velocity * 2.23694 }\n  get kph() { return this.velocity * 3.6 }\n\n  get verticalFps() { return this.verticalRate * 3.28084 }\n  get verticalMps() { return this.verticalRate }\n\n  get isPlottable() { return this.longitude && this.latitude }\n}\n","const leaflet = require('leaflet')\n\nconst airplaneIcon = leaflet.icon({\n    iconUrl: '/img/airplane.png',\n    iconSize: [20, 20],\n    iconAnchor: [10, 10],\n    popupAnchor: [0, -5]\n})\n\nmodule.exports = class AirborneFlightMarker extends leaflet.Marker {\n  constructor(flight) {\n    super([ flight.latitude, flight.longitude ], {\n      icon: airplaneIcon,\n      title: flight.callsign\n    })\n    this.flight = flight\n  }\n}\n","const leaflet = require('leaflet')\nconst coordinates = require('../apis/coordinates')\n\nconst cartoLightServer = {\n  url: '//cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}@2x.png',\n  attribution:\n    '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, ' +\n    '&copy; <a href=\"https://carto.com/attribution\">CARTO</a>'\n}\n\nconst tileLayerForServer = (tileServer) => {\n  const { url, attribution } = tileServer\n\n  return new leaflet.TileLayer(url, { minZoom: 4, maxZoom: 12, attribution })\n}\n\nmodule.exports = class AirborneMap extends leaflet.Map {\n  constructor(domElement) {\n    super(domElement)\n\n    this.addLayer(tileLayerForServer(cartoLightServer))\n    setTimeout(() => { this.invalidateSize() }, 0)\n\n    coordinates.getFromIp((coordinates) => {\n      const { lat, long } = coordinates\n      let location\n\n      if (!lat || !long) {\n        location = new leaflet.LatLng(39.8333333, -98.585522) // US Center\n      } else {\n        location = new leaflet.LatLng(lat, long)\n      }\n\n      this.setView(location, 6)\n    })\n  }\n}\n"]}